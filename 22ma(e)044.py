# -*- coding: utf-8 -*-
"""22MA(E)044

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FRnjUTKK-V1E7DiOlDU5iAT4wu154B4b
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neural_network import MLPClassifier
from sklearn.metrics import accuracy_score

# Load data from the CSV file
data = pd.read_csv('/content/DATA530.csv')

# Extract input features (X) and target labels (y) from the data
X = data.iloc[:, :12]
y = data.iloc[:, 12]

# Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)

# Define the Neural Network model (MLPClassifier)
model = MLPClassifier(hidden_layer_sizes=(100, 80, 60, 60), activation='relu', solver='adam', max_iter=10)

# Fit the model on the training data
model.fit(X_train, y_train)

# Predict the target labels for the test set
y_pred = model.predict(X_test)

# Calculate the accuracy of the model on the test set
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy: %.2f%%" % (accuracy * 100))

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neural_network import MLPClassifier
from sklearn.metrics import accuracy_score

# Load data from the CSV file
data = pd.read_csv('/content/DATA530.csv')

# Extract input features (X) and target labels (y) from the data
X = data.iloc[:, :12]
y = data.iloc[:, 12]

# Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)

# Define the Neural Network model (MLPClassifier)
model = MLPClassifier(hidden_layer_sizes=(100, 80, 60, 60), activation='relu', solver='adam', max_iter=10)

# Fit the model on the training data
model.fit(X_train, y_train)

# Predict the target labels for the test set
y_pred = model.predict(X_test)

# Calculate the accuracy of the model on the test set
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy: %.2f%%" % (accuracy * 100))

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neural_network import MLPClassifier
from sklearn.metrics import accuracy_score, confusion_matrix

# Load data from the CSV file
data = pd.read_csv('/content/DATA530.csv')

# Extract input features (X) and target labels (y) from the data
X = data.iloc[:, :12]
y = data.iloc[:, 12]

# Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)

# Define the Neural Network model (MLPClassifier)
model = MLPClassifier(hidden_layer_sizes=(100, 80, 60, 60), activation='relu', solver='adam', max_iter=10)

# Fit the model on the training data
model.fit(X_train, y_train)

# Predict the target labels for the test set
y_pred = model.predict(X_test)

# Calculate the accuracy of the model on the test set
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy: %.2f%%" % (accuracy * 100))

# Create the confusion matrix
cm = confusion_matrix(y_test, y_pred)
print("Confusion Matrix:")
print(cm)